import socket,ssl
import urllib.parse, urllib.request
import json
import sys, os


print("https://jsonplaceholder.typicode.com/posts/1/comments")
url = ("https://jsonplaceholder.typicode.com")
param = ("/posts/1/comments")
fullURL = url+param

def start_connection():
	activity_definition = "Establish connection to App 2"
	print("Client connecting on port 8080 using SSL")
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	ssl_sock = ssl.wrap_socket(s,
		ca_certs="server.crt",
		cert_reqs = ssl.CERT_REQUIRED)
	ssl_sock.connect(('localhost',8080))
	#post_log(activity_definition)
	return ssl_sock

def get_payload(fullURL):
	activity_definition = "Retrieve a JSON payload data from the Internet"
	print ("URL: ", fullURL)
	response = urllib.request.urlopen(fullURL)
	payload = response.read()
	print("Payload received")
	#post_log(activity_definition)
	return payload

def decode_payload(payload):
	activity_definition = "Decode JSON payload using utf-8"
	payloadDecoded = json.loads(payload.decode('utf-8'))
	print ("Payload decoded")
	return payloadDecoded

def save_payload(payloadDecoded):
	activity_definition = "Locally save JSON payload as a text file"
	with open("App1jsonFile.json", "w") as outFile:
		jsonObj = outFile.write(json.dumps (payloadDecoded))
	print("Payload saved as a test file")


def send_payload(payloadDecoded, ssl_sock):
	activity_definition = "Send JSON payload to App 2"
	ssl_sock.sendall(payload)
	print("Payload sent")
	ssl_sock.close()


#def post_log(description):
	#curl -d '{"id": "412375123", "activityDescription": description, "date": "10/2/2022", "time": "11:20"}' -H 'Content-Type: application/json'  http://127.0.0.1:5000/logs")
	#curl -X POST http://127.0.0.1:5000

   	   #-d '{"login":"my_login","password":"my_password"}'
	#curl -X POST https://reqbin.com/echo/post/json
		#-H 'Content-Type: application/json'
		#-d '{"id": "412375123", "activityDescription": "description", "date": "10/2/2022", "time": "11:20"}'
try:
	ssl_sock = start_connection()
	curl -X POST http://127.0.0.1:5000
	payload = get_payload(fullURL)
	payloadDecoded = decode_payload(payload)
	save_payload(payloadDecoded)
	send_payload(payloadDecoded, ssl_sock)
except:
	e = sys.exc_info()[0]
	print("error: %s" %e)
